//@ui5-bundle chocomint/Component-preload.js
sap.ui.require.preload({
	"chocomint/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","chocomint/model/models"],(e,t)=>{"use strict";return e.extend("chocomint.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},async init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize();try{jQuery.sap.require("sap.ushell.cpv2.services.cloudServices.SiteService")}catch(e){console.log(e)}const i=await t.createUserModel();this.setModel(i,"user")}})});
},
	"chocomint/components/BetterToast.js":function(){
sap.ui.define(["sap/m/MessageToast"],function(s){"use strict";s.success=function(s){this.show(s);$(".sapMMessageToast").addClass("betterToastSucc iconAdded")};s.error=function(s){this.show(s);$(".sapMMessageToast").addClass("betterToastErr iconAdded")};return s});
},
	"chocomint/controller/404.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("chocomint.controller.404",{onInit(){}})});
},
	"chocomint/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","chocomint/utils/constants"],(o,n)=>{"use strict";let t;return o.extend("chocomint.controller.App",{onInit(){t=this.getOwnerComponent().getRouter()},onNavHome(o){t.navTo(n.EMPLOYEE_LIST)},onNavRole(o){t.navTo(n.ROLE_LIST)},onNavDept(){t.navTo(n.DEPT_LIST)}})});
},
	"chocomint/controller/DeptList.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";let t;return e.extend("chocomint.controller.DeptList",{onInit(){t=this.getOwnerComponent().getRouter()}})});
},
	"chocomint/controller/EmplList.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","chocomint/utils/constants","chocomint/components/BetterToast"],(e,t,o)=>{"use strict";let n;return e.extend("chocomint.controller.EmplList",{onInit(){n=this.getOwnerComponent().getRouter()},onNavDetail(e){const o=e.getParameter("row").getBindingContext().getObject();n.navTo(t.EMPLOYEE_INFO,{id:o.ID})},onAddEmpl:async function(e){if(!this.oAddDialog){this.oAddDialog=await this.loadFragment({name:"chocomint.view.fragments.EmplCreate",horizontalScrolling:false,stretch:true})}const t=this.getView();const n=t.getModel();const s=n.bindList("/Employees",undefined,undefined,undefined,{$$updateGroupId:"createGroup"});const i=s.create({},true);s.attachCreateCompleted(e=>{const n=e.getParameter("success");if(n){t.byId("EmplTable").getBinding("rows").refresh();o.success("Create successfully!")}else{o.error("Cannot create new Employee")}this.oAddDialog.close()});await this.oAddDialog;this.oAddDialog.setBindingContext(i);this.oAddDialog.open()},onBtnEmplCreate(e){const t=this.oAddDialog.getBindingContext();const n=t.getModel();n.submitBatch("createGroup").then().catch(function(e){this.oAddDialog.close();o.error(e.message)})},onOnboardEmpl(){o.success("nhu cc")},onDeleteEmpl(e){const t=e.getParameter("row").getBindingContext();const n=t.getModel();t.delete();n.submitBatch(n.getUpdateGroupId()).then().catch(e=>{o.error(e.message)});t.isDeleted()&&o.success("Delete Successfully")},onBtnClose(){this.oAddDialog.close()}})});
},
	"chocomint/controller/Employee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","chocomint/utils/constants","chocomint/utils/types/EmailType","chocomint/components/BetterToast"],(e,t,a,r)=>{"use strict";let o;let i;return e.extend("chocomint.controller.Employee",{onInit(){o=this.getOwnerComponent().getRouter();o.getRoute(t.EMPLOYEE_INFO).attachPatternMatched(this._renderDetail,this);o.initialize();console.log(this.getView().getModel())},onSubmitForm:function(e){let t=true;this.getView().byId("FormEmplDetail").getControlsByFieldGroupId("isRequired").forEach(function(e){if(e.getRequired&&e.getRequired()){var a=e.getValue?e.getValue():e.getSelectedKey();if(!a){e.setValueState("Error");e.setValueStateText("Required");t=false}else{e.setValueState("None");e.setValueStateText("")}}});if(!t)return;const a=this.getView().getModel();a.submitBatch("updateGroup").then(()=>{r.success("Update Successfully")}).catch(function(e){r.error(e.message)})},onCalculateSalary(e){const t=this.getView().getModel();let a=this.getView().getModel().bindContext("/calSalary(...)");a.setParameter("id",i);a.invoke().then(()=>{t.refresh();r.success("Employee's Salary has been recalculated")}).catch(e=>{r.error(e.message)})},_validateInput:function(e){var t="None";var a=false;var r=e.getBinding("value");try{r.getType().validateValue(e.getValue())}catch(e){t="Error";a=true}e.setValueState(t);return a},_renderDetail:async function e(t){i=t.getParameter("arguments").id;const a=this.getView().byId("FormEmplDetail");const r=a.bindElement({path:`/Employees(${i})`,parameters:{$$updateGroupId:"updateGroup",operationMode:"Server",autoExpandSelect:false},events:{dataReceived:async e=>{const t=e.getParameters();t.error&&o.getTargets().display("Target404")}}}).getModel();console.log(r)},EmailType:a})});
},
	"chocomint/controller/RoleList.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";let t;return e.extend("chernobyl.controller.Role",{onInit(){t=this.getOwnerComponent().getRouter()}})});
},
	"chocomint/i18n/i18n.properties":'# This is the resource bundle for chocomint\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=App Title\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=App Title',
	"chocomint/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"chocomint","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"a29cff27-966c-435c-82bf-e817e9f15a77"},"dataSources":{"mainService":{"uri":"/odata/v4/MyService/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"chocomint.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"chocomint.view","async":true,"viewPath":"chocomint.view"},"routes":[{"name":"EmplList","pattern":"","target":["TargetList"]},{"name":"EmplDetail","pattern":"employee/{id}","target":["TargetEmplDetail"]},{"name":"DeptList","pattern":"departments","target":["TargetDeptList"]},{"name":"RoleList","pattern":"roles","target":["TargetRoleList"]},{"pattern":":all*:","name":"NotFound","target":"Target404"}],"targets":{"TargetList":{"id":"EmplList","name":"EmplList"},"TargetEmplDetail":{"id":"Employee","name":"Employee"},"TargetDeptList":{"id":"DeptList","name":"DeptList"},"TargetRoleList":{"id":"RoleList","name":"RoleList"},"Target404":{"id":"404","name":"404"}}},"rootView":{"viewName":"chocomint.view.App","type":"XML","id":"App","async":true}}}',
	"chocomint/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var o=new e(n);o.setDefaultBindingMode("OneWay");return o},async createUserModel(){const n=new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/odata/v4/MyService/",synchronizationMode:"None",operationMode:"Server"});let o=n.bindContext("/whoami(...)");let t=false;await o.invoke().catch(e=>{console.log(e)});const a=o.getBoundContext().getObject();t=a.role.includes("AdminJava");return new e({isAdmin:t})}}});
},
	"chocomint/utils/constants.js":function(){
sap.ui.define([],function(){"use strict";return{EMPLOYEE_FORM:"EmplCreate",EMPLOYEE_LIST:"EmplList",EMPLOYEE_INFO:"EmplDetail",DEPT_LIST:"DeptList",ROLE_LIST:"RoleList"}});
},
	"chocomint/utils/formatters/NameFormatter.js":function(){
sap.ui.define([],function(){"use strict";return{fullname:(e,n)=>`${e} ${n}`}});
},
	"chocomint/utils/formatters/RoleFormatter.js":function(){
sap.ui.define([],function(){"use strict";return{indicator:e=>{let a;switch(e){case"Analyst":a="Indication04";break;case"Manager":a="Indication05";break;case"Developer":a="Indication07";break;default:a="Indication02"}return a}}});
},
	"chocomint/utils/types/EmailType.js":function(){
sap.ui.define(["sap/ui/model/SimpleType","sap/ui/model/ValidateException"],(e,a)=>{"use strict";return e.extend("email",{formatValue:function(e){return e},parseValue:function(e){return e},validateValue:function(e){let i=/^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;if(!e.match(i)){throw new a("'"+e+"' is not a valid e-mail address")}}})});
},
	"chocomint/view/404.view.xml":'<mvc:View\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    controllerName="chocomint.controller.404"\n><Page\n        title="Page Not Found"\n        showHeader="false"\n    ><content><Image src="./images/404.jpg" /></content></Page></mvc:View>\n',
	"chocomint/view/App.view.xml":'<mvc:View\n    controllerName="chocomint.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:tnt="sap.tnt"\n><tnt:ToolPage id="toolPage"><tnt:header><tnt:ToolHeader id="Toolheader"><Image\n                    id="ImgBrand"\n                    src="./images/brand.jpg"\n                    press="onNavHome"\n                /><Button\n                    id="BtnBrand"\n                    text="Hello Kitty"\n                    press="onNavHome"\n                /><ToolbarSpacer id="ToolbarSpace" /><Button\n                    id="BtnEmpl"\n                    text="Employees"\n                    press="onNavHome"\n                    icon="sap-icon://employee"\n                /><Button\n                    id="BtnRole"\n                    text="Roles"\n                    press="onNavRole"\n                    icon="sap-icon://role"\n                /><Button\n                    id="BtnDept"\n                    text="Department"\n                    press="onNavDept"\n                    icon="sap-icon://building"\n                /></tnt:ToolHeader></tnt:header><tnt:mainContents><App id="app" /></tnt:mainContents></tnt:ToolPage></mvc:View>\n',
	"chocomint/view/DeptList.view.xml":'<mvc:View\n    controllerName="chocomint.controller.DeptList"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n    xmlns:table="sap.ui.table"\n><Page\n        showHeader="false"\n        class="sapUiContentPadding"\n    ><content><table:Table\n                id="DeptTable"\n                rows="{path: \'/Departments\',\n                        parameters: {\n                            $$operationMode : \'Server\'\n                        }}"\n                enableSelectAll="false"\n                selectionMode="MultiToggle"\n                rowActionCount="0"\n                enableCellFilter="true"\n                alternateRowColors="true"\n                rowMode="Auto"\n            ><table:extension><OverflowToolbar><Title text="Departments" /><ToolbarSpacer /></OverflowToolbar></table:extension><table:columns><table:Column autoResizable="true"><Label text="Department Name" /><table:template><Text text="{name}" /></table:template></table:Column></table:columns></table:Table></content></Page></mvc:View>\n',
	"chocomint/view/EmplList.view.xml":'<mvc:View\n    controllerName="chocomint.controller.EmplList"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:tnt="sap.tnt"\n    xmlns:core="sap.ui.core"\n    xmlns:table="sap.ui.table"\n    core:require="{RoleFormat: \'chocomint/utils/formatters/RoleFormatter\',\n    NameFormat: \'chocomint/utils/formatters/NameFormatter\'}"\n><Page\n        id="page"\n        title="{i18n>titleListPage}"\n        showHeader="false"\n        class="sapUiContentPadding"\n    ><content><table:Table\n                id="EmplTable"\n                rows="{path: \'/Employees\',\n                        parameters: {\n                            $$operationMode : \'Server\',\n                            $select: \'ID,firstName,lastName,email,role,department\',\n                            $expand: \'role,department\'\n                        }}"\n                enableSelectAll="false"\n                selectionMode="MultiToggle"\n                rowActionCount="2"\n                enableCellFilter="true"\n                alternateRowColors="true"\n                rowMode="Auto"\n            ><table:extension><OverflowToolbar><Title text="Employees" /><ToolbarSpacer /><Button\n                            text="Add Employee"\n                            icon="sap-icon://add-employee"\n                            type="Neutral"\n                            press="onAddEmpl"\n                            visible="{user>/isAdmin}"\n                        /></OverflowToolbar></table:extension><table:columns><table:Column autoResizable="true"><Label text="Name" /><table:template><Text\n                                text="{parts: [{path: \'firstName\'}, {path: \'lastName\'}],\n                                        formatter: \'NameFormat.fullname\'}"\n                            /></table:template></table:Column><table:Column autoResizable="true"><Label text="Email" /><table:template><Text text="{email}" /></table:template></table:Column><table:Column autoResizable="true"><Label text="Role" /><table:template><ObjectStatus\n                                text="{role/name}"\n                                state="{path: \'role/name\',\n                                        formatter: \'RoleFormat.indicator\'}"\n                            /></table:template></table:Column><table:Column autoResizable="true"><Label text="Department" /><table:template><Text text="{department/name}" /></table:template></table:Column></table:columns><table:rowActionTemplate><table:RowAction visible="true"><table:items><table:RowActionItem\n                                press="onNavDetail"\n                                type="Navigation"\n                                text="Detail"\n                            /><table:RowActionItem\n                                press="onDeleteEmpl"\n                                type="Custom"\n                                text="Delete Employee"\n                                icon="sap-icon://delete"\n                                visible="{user>/isAdmin}"\n                            /></table:items></table:RowAction></table:rowActionTemplate></table:Table></content></Page></mvc:View>\n',
	"chocomint/view/Employee.view.xml":'<mvc:View\n    controllerName="chocomint.controller.Employee"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n><Page\n        showHeader="false"\n        class="sapUiContentPadding"\n    ><core:Fragment\n            fragmentName="chocomint.view.fragments.EmplUpdate"\n            type="XML"\n        /><footer><OverflowToolbar><ToolbarSpacer /><Button\n                    id="BtnCreateEmpl"\n                    text="Save"\n                    icon="sap-icon://save"\n                    press="onSubmitForm"\n                    type="Emphasized"\n                    visible="{user>/isAdmin}"\n                /><Button\n                    id="BtnCalSal"\n                    icon="sap-icon://money-bills"\n                    text="Calculate Salary"\n                    press="onCalculateSalary"\n                    visible="{user>/isAdmin}"\n                /></OverflowToolbar></footer></Page></mvc:View>\n',
	"chocomint/view/RoleList.view.xml":'<mvc:View\n    controllerName="chocomint.controller.RoleList"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n    xmlns:table="sap.ui.table"\n><Page\n        showHeader="false"\n        class="sapUiContentPadding"\n    ><content><table:Table\n                id="RoleTable"\n                rows="{path: \'/Roles\',\n                        parameters: {\n                            $$operationMode : \'Server\'\n                        }}"\n                enableSelectAll="false"\n                selectionMode="MultiToggle"\n                rowActionCount="0"\n                enableCellFilter="true"\n                alternateRowColors="true"\n                rowMode="Auto"\n            ><table:extension><OverflowToolbar><Title text="Roles" /><ToolbarSpacer /></OverflowToolbar></table:extension><table:columns><table:Column autoResizable="true"><Label text="Role" /><table:template><Text text="{name}" /></table:template></table:Column><table:Column autoResizable="true"><Label text="Base Salary" /><table:template><Text text="{baseSalary}" /></table:template></table:Column><table:Column autoResizable="true"><Label text="Currency" /><table:template><Text text="{currency_code}" /></table:template></table:Column></table:columns></table:Table></content></Page></mvc:View>\n',
	"chocomint/view/fragments/EmplCreate.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n><Dialog\n        title="Create an new Employee"\n        id="DialogCreateEmpl"\n        horizontalScrolling="false"\n    ><content><core:Fragment fragmentName="chocomint.view.fragments.EmplUpdate" /></content><footer><Toolbar><ToolbarSpacer /><Button\n                    press="onBtnEmplCreate"\n                    text="Save"\n                    type="Accept"\n                /><Button\n                    press="onBtnClose"\n                    text="Close"\n                    type="Transparent"\n                /></Toolbar></footer></Dialog></core:FragmentDefinition>\n',
	"chocomint/view/fragments/EmplUpdate.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n><f:Form\n        id="FormEmplDetail"\n        class="sapUiTinyMargin"\n    ><f:title><core:Title text="Employee Information" /></f:title><f:layout><f:ResponsiveGridLayout\n                adjustLabelSpan="true"\n                columnsXL="2"\n                columnsL="2"\n                columnsM="1"\n                emptySpanXL="0"\n                emptySpanL="0"\n                emptySpanM="0"\n                emptySpanS="0"\n                singleContainerFullSize="true"\n            /></f:layout><f:formContainers><f:FormContainer id="EmplCol1"><f:formElements><f:FormElement label="Name"><f:fields><Input\n                                id="InEmpFirstName"\n                                value="{firstName}"\n                                required="true"\n                                fieldGroupIds="isRequired"\n                                placeholder="First Name"\n                                editable="{user>/isAdmin}"\n                            /><Input\n                                id="InEmpName"\n                                value="{lastName}"\n                                required="true"\n                                fieldGroupIds="isRequired"\n                                placeholder="Last Name"\n                                editable="{user>/isAdmin}"\n                            /></f:fields></f:FormElement><f:FormElement label="Gender"><f:fields><Select\n                                id="SelEmpGender"\n                                selectedKey="{path: \'gender\', type: \'sap.ui.model.type.Boolean\'}"\n                                required="true"\n                                fieldGroupIds="isRequired"\n                                forceSelection="false"\n                                editable="{user>/isAdmin}"\n                            ><items><core:Item\n                                        key="{= false}"\n                                        text="Male"\n                                    /><core:Item\n                                        key="{= true}"\n                                        text="Female"\n                                    /></items></Select></f:fields></f:FormElement></f:formElements><f:FormElement label="Department"><Select\n                        id="SelDept"\n                        items="{/Departments}"\n                        selectedKey="{department_ID}"\n                        required="true"\n                        fieldGroupIds="isRequired"\n                        forceSelection="false"\n                        editable="{user>/isAdmin}"\n                    ><items><core:Item\n                                text="{name}"\n                                key="{ID}"\n                            /></items></Select></f:FormElement><f:FormElement label="Level"><Select\n                        id="SelLevel"\n                        selectedKey="{role_ID}"\n                        required="true"\n                        items="{/Roles}"\n                        fieldGroupIds="isRequired"\n                        forceSelection="false"\n                        editable="{user>/isAdmin}"\n                    ><core:Item\n                            text="{name}"\n                            key="{ID}"\n                        /></Select></f:FormElement></f:FormContainer><f:FormContainer id="EmplCol2"><f:FormElement label="Date of Birth"><DatePicker\n                        valueFormat="yyyy-MM-dd"\n                        id="DateDob"\n                        value="{dateOfBirth}"\n                        required="true"\n                        fieldGroupIds="isRequired"\n                        editable="{user>/isAdmin}"\n                    /></f:FormElement><f:formElements><f:FormElement label="Working From"><DatePicker\n                            id="DateHire"\n                            value="{hireDate}"\n                            required="true"\n                            fieldGroupIds="isRequired"\n                            valueFormat="yyyy-MM-dd"\n                            editable="{user>/isAdmin}"\n                        /></f:FormElement><f:FormElement label="Email"><Input\n                            id="InEmail"\n                            valueStateText="E-mail must be a valid email address."\n                            value="{ path: \'email\' }"\n                            fieldGroupIds="isRequired"\n                            required="true"\n                            editable="{user>/isAdmin}"\n                        /></f:FormElement><f:FormElement label="Salary"><Input\n                            id="InSalary"\n                            editable="false"\n                            value="{salary}"\n                            placeholder="Salary"\n                            valueState="Information"\n                            tooltip="Salary will be calculated instead of being entered manually."\n                            valueStateText="Salary will be calculated instead of being entered manually."\n                        ><layoutData><f:ColumnElementData\n                                    cellsLarge="12"\n                                    cellsSmall="3"\n                                /></layoutData></Input><Input\n                            id="InCurrency"\n                            class="float-right fit-container"\n                            value="{currency_code}"\n                            placeholder="Currency"\n                            showSuggestion="true"\n                            suggestionItems="{/Currencies}"\n                            editable="{user>/isAdmin}"\n                        ><suggestionItems><core:ListItem\n                                    text="{code}"\n                                    additionalText="{name}"\n                                /></suggestionItems></Input></f:FormElement></f:formElements></f:FormContainer></f:formContainers></f:Form></core:FragmentDefinition>\n'
});
//# sourceMappingURL=Component-preload.js.map
